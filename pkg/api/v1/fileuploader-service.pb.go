// Code generated by protoc-gen-go.
// source: fileuploader-service.proto
// DO NOT EDIT!

/*
Package fileuploader_service is a generated protocol buffer package.

It is generated from these files:
	fileuploader-service.proto

It has these top-level messages:
	File
	FileUploadRequest
	LoginResponse
*/
package fileuploader_service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type File struct {
	Filename    string `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Filecontent []byte `protobuf:"bytes,2,opt,name=filecontent,proto3" json:"filecontent,omitempty"`
}

func (m *File) Reset()                    { *m = File{} }
func (m *File) String() string            { return proto.CompactTextString(m) }
func (*File) ProtoMessage()               {}
func (*File) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type FileUploadRequest struct {
	Api  string `protobuf:"bytes,1,opt,name=api" json:"api,omitempty"`
	File *File  `protobuf:"bytes,2,opt,name=file" json:"file,omitempty"`
}

func (m *FileUploadRequest) Reset()                    { *m = FileUploadRequest{} }
func (m *FileUploadRequest) String() string            { return proto.CompactTextString(m) }
func (*FileUploadRequest) ProtoMessage()               {}
func (*FileUploadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FileUploadRequest) GetFile() *File {
	if m != nil {
		return m.File
	}
	return nil
}

type LoginResponse struct {
	Api     string `protobuf:"bytes,1,opt,name=api" json:"api,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Url     string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*File)(nil), "File")
	proto.RegisterType((*FileUploadRequest)(nil), "FileUploadRequest")
	proto.RegisterType((*LoginResponse)(nil), "LoginResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for FileUploaderService service

type FileUploaderServiceClient interface {
	UploadFile(ctx context.Context, in *FileUploadRequest, opts ...grpc.CallOption) (*FileUploadRequest, error)
}

type fileUploaderServiceClient struct {
	cc *grpc.ClientConn
}

func NewFileUploaderServiceClient(cc *grpc.ClientConn) FileUploaderServiceClient {
	return &fileUploaderServiceClient{cc}
}

func (c *fileUploaderServiceClient) UploadFile(ctx context.Context, in *FileUploadRequest, opts ...grpc.CallOption) (*FileUploadRequest, error) {
	out := new(FileUploadRequest)
	err := grpc.Invoke(ctx, "/FileUploaderService/UploadFile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FileUploaderService service

type FileUploaderServiceServer interface {
	UploadFile(context.Context, *FileUploadRequest) (*FileUploadRequest, error)
}

func RegisterFileUploaderServiceServer(s *grpc.Server, srv FileUploaderServiceServer) {
	s.RegisterService(&_FileUploaderService_serviceDesc, srv)
}

func _FileUploaderService_UploadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileUploadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileUploaderServiceServer).UploadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FileUploaderService/UploadFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileUploaderServiceServer).UploadFile(ctx, req.(*FileUploadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileUploaderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "FileUploaderService",
	HandlerType: (*FileUploaderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UploadFile",
			Handler:    _FileUploaderService_UploadFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fileuploader-service.proto",
}

func init() { proto.RegisterFile("fileuploader-service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4e, 0xf3, 0x30,
	0x10, 0x85, 0x95, 0xb6, 0xff, 0x0f, 0x9d, 0x82, 0x04, 0x46, 0x48, 0x21, 0x62, 0x11, 0x65, 0x55,
	0x21, 0x11, 0x8b, 0xb2, 0x63, 0xc5, 0x02, 0xb1, 0x82, 0x8d, 0x11, 0xec, 0x4d, 0x19, 0x22, 0x4b,
	0x8e, 0xc7, 0xd8, 0x4e, 0x0f, 0xc0, 0x15, 0x38, 0x1a, 0x57, 0xe0, 0x20, 0xc8, 0x36, 0x50, 0x24,
	0xba, 0xca, 0xcc, 0xcb, 0xbc, 0x4f, 0xcf, 0x0f, 0xaa, 0x67, 0xa5, 0x71, 0xb0, 0x9a, 0xe4, 0x13,
	0xba, 0x53, 0x8f, 0x6e, 0xa5, 0x96, 0xd8, 0x5a, 0x47, 0x81, 0xaa, 0xe3, 0x8e, 0xa8, 0xd3, 0xc8,
	0xa5, 0x55, 0x5c, 0x1a, 0x43, 0x41, 0x06, 0x45, 0xc6, 0xe7, 0xbf, 0xcd, 0x15, 0x4c, 0xae, 0x95,
	0x46, 0x56, 0xc1, 0x76, 0x64, 0x18, 0xd9, 0x63, 0x59, 0xd4, 0xc5, 0x7c, 0x2a, 0x7e, 0x76, 0x56,
	0xc3, 0x2c, 0xce, 0x4b, 0x32, 0x01, 0x4d, 0x28, 0x47, 0x75, 0x31, 0xdf, 0x11, 0xbf, 0xa5, 0xe6,
	0x12, 0xf6, 0x23, 0xe5, 0x3e, 0x25, 0x10, 0xf8, 0x32, 0xa0, 0x0f, 0x6c, 0x0f, 0xc6, 0xd2, 0xaa,
	0x2f, 0x5a, 0x1c, 0xd9, 0x11, 0x4c, 0xa2, 0x2b, 0x11, 0x66, 0x8b, 0x7f, 0x6d, 0xf4, 0x88, 0x24,
	0x35, 0xb7, 0xb0, 0x7b, 0x43, 0x9d, 0x32, 0x02, 0xbd, 0x25, 0xe3, 0x71, 0x83, 0xbb, 0x84, 0xad,
	0x1e, 0xbd, 0x97, 0x5d, 0x06, 0x4c, 0xc5, 0xf7, 0x1a, 0x6f, 0x07, 0xa7, 0xcb, 0x71, 0xbe, 0x1d,
	0x9c, 0x5e, 0xf4, 0x70, 0xb0, 0x0e, 0x84, 0xee, 0x2e, 0x37, 0xc2, 0x1e, 0x00, 0xb2, 0x94, 0xde,
	0xcc, 0xda, 0x3f, 0xa1, 0xab, 0x0d, 0x5a, 0x53, 0xbf, 0xbe, 0x7f, 0xbc, 0x8d, 0xaa, 0xe6, 0x90,
	0xaf, 0xce, 0xf8, 0xba, 0x69, 0x9e, 0x3f, 0x17, 0xc5, 0xc9, 0xe3, 0xff, 0x54, 0xe6, 0xf9, 0x67,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xa2, 0x6b, 0x08, 0x2a, 0x88, 0x01, 0x00, 0x00,
}
